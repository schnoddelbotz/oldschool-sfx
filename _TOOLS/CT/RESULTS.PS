%!PS-Adobe-1.0
%%Creator: h2bench
%%Title: Messbogen

%Copyright (C) 1996 Verlag Heinz Heise GmbH, c't Magazin fuer Computertechnik
%by Harald Boegeholz

StandardEncoding 256 array copy
dup 16#8E /Adieresis put
dup 16#99 /Odieresis put
dup 16#9A /Udieresis put
dup 16#84 /adieresis put
dup 16#94 /odieresis put
dup 16#81 /udieresis put
dup 16#E1 /germandbls put
/MyEncoding exch def

/ReencodeFont
{ % def
  dup maxlength dict exch
  { % forall
    exch dup /Encoding eq
    { % ifelse (TRUE)
      pop pop
      dup /Encoding MyEncoding put
    }{ % ifelse (FALSE)
      exch 2 index 4 1 roll put
    } ifelse
  } forall
  definefont
  pop
} def


/PCHelvetica /Helvetica findfont ReencodeFont
/PCHelvetica-Oblique /Helvetica-Oblique findfont ReencodeFont
/PCHelvetica-Bold /Helvetica-Bold findfont ReencodeFont
/DestructiveBenchmarks false def
/DidZonebench true def
[
4988.5
4820.4
5081.2
5070.8
5083.3
5071.4
4939.4
4948.9
5070.5
5071.1
5098.7
5079.5
4935.3
5072.8
5088.5
5065.8
5081.3
5071.4
4823.8
5070.2
4928.8
5105.3
5073.3
5079.7
4938.9
5089.4
5066.5
5070.1
5082.0
5070.4
5074.5
4939.8
4968.7
5072.6
5068.2
5082.3
5073.8
4949.9
5069.0
5071.1
5080.4
5064.3
5101.1
4937.2
5087.0
5069.6
5070.0
5084.7
5071.5
4947.8
5069.8
5084.7
4929.5
5091.6
5073.9
4823.6
5079.4
5069.8
5088.1
5070.8
5067.9
5084.1
4938.7
5071.5
5096.2
5070.6
5080.9
5069.0
4956.6
5066.3
5082.4
5069.1
5071.5
5074.9
4936.2
4970.7
5073.8
5080.1
4938.9
5074.6
4947.1
5070.8
5082.0
5070.7
5081.8
5071.2
4950.2
5083.4
5070.1
5081.1
5073.6
5083.5
5070.3
4938.2
5081.3
5063.9
5097.1
5069.6
5089.8
4939.6
5066.5
5088.0
5069.4
4277.3
4275.7
4814.2
5071.9
5098.3
5079.9
5069.9
5079.7
4813.5
5074.4
5079.8
5071.7
5081.0
5070.5
5076.4
4959.6
5060.6
5091.4
5068.8
5088.3
5067.4
4950.1
5070.3
5068.9
5076.9
5070.1
5099.2
4942.4
5082.2
5070.5
5076.7
5078.0
5071.6
4948.3
5071.0
5064.5
5088.5
5079.8
5086.3
4939.0
5080.0
5074.0
5071.2
5081.2
5071.0
5079.5
4932.7
5109.2
5058.6
4947.3
5078.7
5070.5
4953.6
5069.1
5083.9
5071.5
5066.5
5074.8
4964.8
5065.6
5082.2
5083.4
5068.9
5074.0
4949.4
5071.4
5081.2
5069.8
5062.2
5106.8
4927.0
5094.0
5069.8
5088.5
5066.2
5070.2
5082.1
4937.5
5074.4
5070.4
5100.6
5075.0
5071.2
4947.7
5077.5
5076.8
5070.5
5083.9
5070.2
4929.9
5101.8
5069.6
5085.4
5068.6
5083.4
4942.8
5068.6
5084.0
5069.7
5082.1
5062.2
5101.8
4934.0
5077.6
5082.4
5069.6
5084.8
5072.1
4937.1
5082.4
5070.6
5071.0
5099.7
5079.3
4938.4
5069.6
5087.5
5068.6
5080.2
5071.0
4949.2
5072.6
5061.5
4968.8
5074.3
5078.7
4938.0
5086.5
4938.7
5069.0
5082.5
5070.4
5074.9
4946.5
5094.9
5072.8
5068.7
5082.4
5073.4
4950.0
5070.6
5069.0
5081.5
5064.2
5101.1
4936.5
5085.7
5070.8
5071.1
5085.0
5069.8
4948.6
5070.3
5084.0
5062.6
5089.6
5073.6
4949.4
5079.1
5070.0
5088.0
5069.4
5068.5
5083.8
4938.6
5070.9
5096.5
5071.9
5081.3
5067.4
4957.5
5067.1
5080.3
5070.8
5070.4
5074.9
4936.0
5104.2
5074.1
4948.8
5069.5
5073.8
4949.2
5070.0
5080.7
5071.6
5082.0
5064.1
4956.2
5084.3
5071.2
5079.5
5074.8
5082.1
5070.9
4938.2
5081.6
4931.8
5099.7
5067.3
5090.7
4939.0
4935.6
5087.1
5070.7
5080.4
5071.7
4937.8
5072.9
5089.4
5077.6
5081.0
5078.9
4938.2
5074.8
5081.5
5069.8
5081.3
5069.3
5078.0
4959.6
4929.7
5089.8
5070.2
5087.0
5067.6
4826.4
5070.7
5067.1
5076.9
5070.3
5098.6
4943.6
5081.9
5069.5
5076.0
5079.3
5070.6
4949.6
5070.1
5070.3
5082.9
5079.5
5086.5
4938.6
5081.1
5073.0
5071.9
5079.4
4940.1
5079.8
4931.9
5109.5
5059.0
5078.5
5080.5
4813.2
4953.7
5069.6
5084.0
5070.2
4935.2
5075.7
4964.6
4935.1
5080.7
5081.6
5070.3
5073.6
4950.7
4917.9
4803.2
4838.3
4804.6
4702.4
4817.2
4702.0
4811.3
4804.3
4835.2
4687.1
4824.6
4817.9
4823.6
4808.3
4803.6
4714.5
4687.8
4704.2
4816.4
4806.0
4824.5
4807.3
4835.5
4805.4
4814.1
4828.1
4796.8
4712.6
4807.6
4713.0
4808.6
4815.6
4824.0
4799.5
4831.4
4805.5
4836.2
4804.5
4702.5
4820.5
4805.2
4705.4
4806.7
4834.3
4806.0
4817.3
4823.7
4805.1
4824.7
4807.4
4714.8
4806.1
4797.1
4724.7
4803.4
4824.1
4807.3
4835.0
4806.6
4797.7
4839.9
4809.0
4704.5
4806.9
4706.1
4815.1
4798.3
4840.6
4807.4
4676.7
4475.4
4597.2
4496.1
4485.6
4596.9
4585.3
4369.8
4599.2
4607.1
4594.3
4595.2
4597.2
4568.2
4493.3
4596.3
4605.5
4486.4
4487.0
4481.5
4583.7
4594.4
4496.3
4596.0
4593.3
4596.3
4462.1
4602.1
4597.9
4494.3
4487.7
4595.8
4586.1
4584.9
4485.7
4607.2
4592.7
4597.2
4587.2
4476.5
4486.3
4488.5
4605.1
4594.8
4596.7
4462.7
4601.1
4594.0
4498.4
4592.8
4596.6
4482.6
4472.2
4597.7
4595.9
4604.1
4595.0
4595.5
4569.8
4493.0
4595.3
4607.1
4483.8
4489.2
4478.1
4583.5
4596.4
4413.0
4421.1
4399.1
4427.1
4401.7
4410.7
4406.9
4400.4
4418.1
4401.5
4411.1
4409.6
4399.6
4417.9
4400.2
4421.5
4399.4
4399.9
4419.3
4400.0
4419.6
4399.9
4399.2
4420.1
4401.0
4419.0
4400.6
4398.9
4419.1
4399.8
4420.7
4400.9
4393.8
4433.5
4400.4
4420.0
4399.3
4395.1
4423.0
4401.7
4419.9
4399.9
4409.3
4409.8
4399.7
4420.7
4400.6
4414.0
4405.8
4298.3
4419.9
4399.4
4415.0
4407.3
4398.9
4418.0
4400.6
4410.7
4409.3
4399.7
4420.1
4399.8
4429.3
4400.4
4271.7
4304.4
4282.5
4299.6
4294.9
4293.9
4301.4
4283.1
4313.2
4185.3
4217.1
4194.3
4308.7
4287.3
4308.3
4191.4
4303.1
4292.4
4208.4
4289.6
4309.1
4101.8
4212.5
4287.6
4308.6
4278.8
4303.3
4289.6
4308.2
4288.8
4298.8
4200.9
4297.4
4201.8
4281.9
4313.7
4188.4
4312.8
4287.1
4303.6
4291.6
4309.0
4191.1
4212.6
4287.9
4308.1
4286.4
4308.8
4277.7
4308.7
4286.1
4308.3
4192.6
4308.3
4192.1
4308.2
4285.9
4300.0
4294.9
4297.9
4297.8
4282.4
4216.5
3769.1
3646.4
3736.6
3728.6
3646.8
3741.3
3725.1
3733.1
3585.8
3723.9
3740.6
3578.7
3736.0
3729.1
3646.2
3742.0
3725.0
3732.4
3654.6
3724.7
3740.4
3647.4
3735.8
3728.6
3647.1
3741.0
3725.1
3732.8
3654.3
3724.6
3741.2
3646.4
3736.3
3728.1
3647.3
3740.9
3724.6
3734.0
3654.2
3724.5
3740.8
3647.2
3736.0
3729.1
3646.2
3741.2
3725.3
3733.1
3654.5
3724.5
3740.5
3647.2
3735.5
3729.4
3646.9
3741.0
3725.2
3667.7
3742.7
3735.2
3741.2
3664.3
3669.1
3735.8
3741.9
3735.5
3670.8
3735.2
3742.0
3735.8
3741.8
3663.6
3741.9
3735.3
3742.5
3750.6
3671.5
3741.6
3735.7
3742.6
3662.9
3742.4
3735.6
3742.3
3735.6
3669.3
3735.9
3742.5
3735.0
3670.2
3735.7
3742.2
3735.8
3741.8
3663.2
3743.4
3735.2
3738.7
3663.3
3746.3
3742.1
3751.5
3734.9
3669.9
3735.6
3742.5
3735.7
3742.0
3663.5
3742.5
3735.6
3742.4
3492.3
3427.3
3560.4
3471.0
3557.9
3559.7
3554.3
3426.3
3560.6
3418.4
3547.1
3554.2
3494.7
3553.8
3554.1
3560.4
3412.1
3553.6
3494.7
3554.5
3488.0
3560.5
3546.9
3547.4
3559.5
3426.7
3553.9
3431.2
3554.8
3536.3
3563.6
3552.5
3554.6
3432.9
3552.6
3482.7
3482.2
3494.3
3488.1
3555.2
3560.1
3552.7
3409.7
3564.1
3426.0
3553.5
3495.0
3554.4
3546.0
3552.8
3555.1
3221.0
3254.9
3250.5
3203.9
3204.4
3258.6
3204.3
3189.2
3207.8
3258.8
3258.8
3203.4
3199.9
3251.4
3204.3
3204.2
3203.8
3258.1
3243.4
3207.9
3203.5
3258.9
3203.8
3199.7
3196.5
3259.6
3258.7
3204.2
3203.4
3246.1
3204.6
3203.0
3204.6
3258.3
3254.8
3196.7
3204.4
3259.1
3203.8
3203.5
3189.8
3262.4
3258.8
3258.8
3203.8
3253.5
3192.0
3150.5
3024.0
3023.6
3023.9
3019.8
3024.7
3024.6
3013.4
3019.1
3023.9
3024.8
3024.5
2972.0
3024.6
3024.1
3024.7
3019.3
3014.5
3021.5
3026.9
3019.8
3023.7
3024.4
3024.5
3019.6
3024.0
3024.2
3019.4
2964.9
3027.0
3023.4
3019.9
3024.4
3023.7
3024.4
3019.5
3024.8
3024.1
3013.6
3019.2
3024.0
3024.7
3024.5
2971.5
3024.4
2933.4
2805.1
2851.6
2847.2
2804.0
2852.3
2847.3
2850.7
2797.2
2846.2
2851.6
2805.1
2851.5
2846.8
2847.7
2808.7
2847.2
2851.4
2800.3
2840.9
2853.1
2847.3
2809.1
2847.5
2851.3
2805.7
2846.2
2851.9
2843.6
2804.4
2846.9
2845.8
2809.9
2847.0
2851.1
2847.3
2805.1
2851.2
2847.1
2807.0
2838.9
2806.9
2626.1
2626.4
2628.9
2589.1
2664.8
2624.5
2624.6
2624.9
2624.4
2588.8
2661.9
2665.5
2588.7
2624.6
2661.5
2624.6
2625.0
2659.1
2626.2
2629.2
2624.9
2628.1
2628.7
2661.2
2660.8
2589.3
2624.9
2661.9
2624.1
2588.9
2661.5
2624.5
2624.6
2624.9
2628.3
] /ZoneReadResults exch def

/ZoneReadScaleMin 2500 def
/ZoneReadScaleMax 5500 def
/ZoneReadScaleIncr 500 def

/DidHdbench false def
/Footer (Testbeginn: 07.08.96  14:47:23, Testversion: $Id: h2bench.c,v 2.1 1996/08/12 10:16:09 hwb Rel $, Dateiname 'results') def
/Title (Empire 2100S) def
/Resulttext
[
[(BIOS:) ()]
[(CPU:) (Pentium 100)]
[(Board:) (ASUS T2P4)]
[(Adapter:) ()]
[(Mapping/Kapazit„t:) (CHS=\(255/255/63\), insgesamt 4096575 Sektoren = 2000 MByte)]
[() ()]
[(Dauertransferrate Lesen:) (Mittel 4126.5, Min 2588.7, Max 5109.5 [KByte/s])]
[() ()]
]
def
/Minit {/M matrix def} def
/MT {M transform} def
/Mscale {matrix scale M matrix concatmatrix /M exch def} def
/Mtranslate {matrix translate M matrix concatmatrix /M exch def} def
/Mmoveto {MT moveto} def
/Mlineto {MT lineto} def

/max
{
  dup 2 index gt {exch} if pop
} def

/HDBTableColumn
{ % parameter: Results, Header, NormalFont, MaxFont, 
  %            HeadFont, x, y_firstline, yspacing
  save 9 1 roll
  /dy exch def
  /y exch def
  /x exch def
  /HeadFont exch def
  /MaxFont exch def
  /NormalFont exch def
  /Header exch def
  /tmpstr 10 string def

  % Maximum ermitteln
  dup dup 0 get 1 get exch
  { % forall
    1 get max
  } forall
  /ResMax exch def

  HeadFont setfont
  Header dup stringwidth pop neg x add y moveto show
  /y y dy add def

  { % forall
    1 get
    dup ResMax eq {MaxFont setfont} {NormalFont setfont} ifelse
    tmpstr cvs dup
    stringwidth pop neg x add y moveto show
    /y y dy add def
  } forall
  
  restore
} def % HDBTableColunm


/ZoneDiagram
{ % Parameter: Results, ScaleMin, ScaleMax, ScaleIncr, Title
  % x_lu, y_lu, x_ro, y_ro
save 10 1 roll
gsave

Minit
3 index 3 index Mtranslate
3 -1 roll sub 3 1 roll sub neg exch Mscale
/ZoneDiagTitle exch def
/ZoneDiagScaleIncr exch def
/ZoneDiagScaleMax exch def
/ZoneDiagScaleMin exch def
/ZoneDiagResults exch def

/PCHelvetica findfont 8 scalefont setfont
.2 setlinewidth

% Kasten drumrum malen
0 0 Mmoveto 1 0 Mlineto 1 1 Mlineto 0 1 Mlineto closepath stroke

0.5 1 Mmoveto
ZoneDiagTitle dup stringwidth pop -2 div 7 rmoveto show

/tmpstr 10 string def

% x-Achsenbeschriftung
0 10 100
{ % for
  dup 100 div 0 Mmoveto 0 -2 rlineto stroke
  dup 100 div 0 MT 12 sub moveto tmpstr cvs 
  dup stringwidth pop -2 div 0 rmoveto
  show
} for

gsave
0 0.5 Mmoveto 
ZoneDiagScaleMax tmpstr cvs stringwidth pop 18 add neg 0 rmoveto
(KByte/s) dup stringwidth pop -2 div 0 exch rmoveto
90 rotate show
grestore

gsave
0 0 Mmoveto 1 0 Mlineto 1 1 Mlineto 0 1 Mlineto closepath clip newpath

1 ZoneDiagResults length 1 sub div 
1 ZoneDiagScaleMax ZoneDiagScaleMin sub div Mscale
0 ZoneDiagScaleMin neg Mtranslate

0 ZoneDiagResults 0 get Mmoveto
0
ZoneDiagResults
{
  exch dup 1 add exch 3 -1 roll
  Mlineto
} forall pop
stroke
grestore % restore old clippath

% y-Achsenbeschriftung
ZoneDiagScaleMin ZoneDiagScaleIncr ZoneDiagScaleMax
{ % for
  dup 0 exch Mmoveto -2 0 rlineto stroke % Wert
  dup tmpstr cvs dup stringwidth pop neg % Wert String Offset
  3 -1 roll % String Offset Wert
  0 exch MT % String Offset x y
  3 1 roll add % String y x
  8 sub exch 2 sub moveto show
} for

grestore
restore
} def

/HDBDiagram
{
save 7 1 roll
gsave
Minit
3 index 3 index Mtranslate
3 -1 roll sub 3 1 roll sub neg exch Mscale

/HDBDiagTitle exch def
/HDBResults exch def

/PCHelvetica findfont 8 scalefont setfont
.2 setlinewidth

% Kasten drumrum malen
0 0 Mmoveto 1 0 Mlineto 1 1 Mlineto 0 1 Mlineto closepath stroke

0.5 1 Mmoveto
HDBDiagTitle dup stringwidth pop -2 div 5 rmoveto show

/tmpstr 10 string def

gsave % for clipping
0 0 Mmoveto 1 0 Mlineto 1 1 Mlineto 0 1 Mlineto closepath clip newpath

1 HDBXScaleMax HDBXScaleMin sub div
1 HDBYScaleMax HDBYScaleMin sub div Mscale
HDBXScaleMin HDBYScaleMin Mtranslate

HDBResults 0 get {} forall Mmoveto

HDBResults
{ % forall
  {} forall
  Mlineto
} forall
stroke

HDBResults
{ %forall
  {} forall MT
  2 0 360 arc closepath stroke
} forall
grestore % turn off clipping

% x-Achsenbeschriftung
HDBXScaleMin HDBXScaleIncr HDBXScaleMax
{ % for
  dup 0 Mmoveto 0 -2 rlineto stroke
  dup 0 MT 12 sub moveto tmpstr cvs 
  dup stringwidth pop -2 div 0 rmoveto
  show
} for

% y-Achsenbeschriftung
HDBYScaleMin HDBYScaleIncr HDBYScaleMax
{ % for
  dup 0 exch Mmoveto -2 0 rlineto stroke % Wert
  dup tmpstr cvs dup stringwidth pop neg % Wert String Offset
  3 -1 roll % String Offset Wert
  0 exch MT % String Offset x y
  3 1 roll add % String y x
  8 sub exch 2 sub moveto show
} for

grestore
restore
} def
  



% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/mm {25.4 div 72 mul} def
30 mm 10 mm translate % Heftrand lassen

DidZonebench
{ % if
  ZoneReadResults ZoneReadScaleMin ZoneReadScaleMax ZoneReadScaleIncr
  (Zonenmessung Lesen)
  20 mm 143.5 mm 85 mm 202.5 mm
  ZoneDiagram
  
  DestructiveBenchmarks
  { % if
    ZoneWriteResults ZoneWriteScaleMin ZoneWriteScaleMax ZoneWriteScaleIncr
    (Zonenmessung Schreiben)
    105.5 mm 143.5 mm 170.5 mm 202.5 mm
    ZoneDiagram
  } if
} if

/gridpoint
{
  exch 42.7 mm mul 17.4 mm add exch
  37 mm mul 65 mm add
  1 index 25 mm add
  1 index 25 mm add
} def

DidHdbench
{ %if
  HDBReadLinear (Read Linear)
  0 1 gridpoint
  HDBDiagram
  
  HDBReadRandom (Read Random)
  1 1 gridpoint
  HDBDiagram
  
  DestructiveBenchmarks
  { % if
    HDBWriteLinear (Write Linear)
    2 1 gridpoint
    HDBDiagram
    
    HDBWriteRandom (Write Random)
    3 1 gridpoint
    HDBDiagram
  } if
  
  HDBReadLinearAgain (R.L. Again)
  0 0 gridpoint
  HDBDiagram
  
  HDBReadRandomAgain (R.R. Again)
  1 0 gridpoint
  HDBDiagram
  
  DestructiveBenchmarks
  { % if
    HDBWriteLinearAgain (W.L. Again)
    2 0 gridpoint
    HDBDiagram
    
    HDBWriteRandomAgain (W.R. Again)
    3 0 gridpoint
    HDBDiagram
  } if
  
  
  /NormalFont {/PCHelvetica findfont 8 scalefont} def
  /MaxFont {/PCHelvetica-Oblique findfont 8 scalefont} def
  /HeadFont {/PCHelvetica-Bold findfont 8 scalefont} def
  
  /x 0 def
  /y 55 mm def
  /dy -9 def
  /tmpstr 20 string def

  HeadFont setfont
  (Blk) x y moveto show
  /y y dy add def

  NormalFont setfont
  HDBReadLinear
  { % forall
    0 get
    tmpstr cvs x y moveto show
    /y y dy add def
  } forall


  /HDBcol {1 add 21.375 mm mul} def
  
  HDBReadLinear (R.L.) NormalFont MaxFont HeadFont 0 HDBcol 55 mm -9 HDBTableColumn
  HDBReadLinearAgain (R.L.A.) NormalFont MaxFont HeadFont 1 HDBcol 55 mm -9 HDBTableColumn
  HDBReadRandom (R.R.) NormalFont MaxFont HeadFont 2 HDBcol 55 mm -9 HDBTableColumn
  HDBReadRandomAgain (R.R.A.) NormalFont MaxFont HeadFont 3 HDBcol 55 mm -9 HDBTableColumn
  
  DestructiveBenchmarks
  {
    HDBWriteLinear (W.L.) NormalFont MaxFont HeadFont 4 HDBcol 55 mm -9 HDBTableColumn
    HDBWriteLinearAgain (W.L.A.) NormalFont MaxFont HeadFont 5 HDBcol 55 mm -9 HDBTableColumn
    HDBWriteRandom (W.R.) NormalFont MaxFont HeadFont 6 HDBcol 55 mm -9 HDBTableColumn
    HDBWriteRandomAgain (W.R.A.) NormalFont MaxFont HeadFont 7 HDBcol 55 mm -9 HDBTableColumn
  } if
} if


/PCHelvetica findfont 8 scalefont setfont 0 0 moveto Footer show

/PCHelvetica-Bold findfont 12 scalefont setfont
0 270 mm moveto Title show

/x 0 def
/x2 50 mm def
/y 270 mm 20 sub def
/dy -10 def

/PCHelvetica findfont 8 scalefont setfont
Resulttext
{ % forall
  {} forall
  x2 y moveto show
  x y moveto show
  /y y dy add def
} forall

30 mm 181 div dup scale 
141 mm 181 mul 30 mm div
250 mm 181 mul 30 mm div
translate

userdict begin /AltsysDict 245 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/sepdef{
 dup where not
 {
AltsysSepDict
 }
 if 
 3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/_NXLevel2 defed { 
 _NXLevel2 not {   
/colorimage where {
userdict eq {
/_rci false def 
} if
} if
 } if
} if
/md defed{ 
 md type /dicttype eq {  
/colorimage where { 
md eq { 
/_rci false def 
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
 }if 
}if
/setstrokeadjust defed
{
 true setstrokeadjust
 /C{curveto}bdf
 /L{lineto}bdf
 /m{moveto}bdf
}
{
 /dr{transform .25 sub round .25 add 
exch .25 sub round .25 add exch itransform}bdf
 /C{dr curveto}bdf
 /L{dr lineto}bdf
 /m{dr moveto}bdf
 /setstrokeadjust{pop}bdf 
}ifelse
/rectstroke defed /xt xdf
xt {/yt save def} if
/privrectpath { 
 4 -2 roll m
 dtransform round exch round exch idtransform 
 2 copy 0 lt exch 0 lt xor
 {dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
 {exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
 ifelse
 closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
xt {yt restore} if
/_fonthacksave false def
/currentpacking defed 
{
 /_bfh {/_fonthacksave currentpacking def false setpacking} bdf
 /_efh {_fonthacksave setpacking} bdf
}
{
 /_bfh {} bdf
 /_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/` 
{ 
 false setoverprint  
 
 
 /-save0- save def
 5 index concat
 pop
 storerect left bottom width height rectclip
 pop
 
 userdict begin
 
 /showpage {} def
 
 0 setgray 0 setlinecap 1 setlinewidth
 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
 
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1 
 statusdict begin
/processcolors defed 
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
 end 
def
/printerRes 
 gsave
 matrix defaultmatrix setmatrix
 72 72 dtransform
 abs exch abs
 max
 grestore
 def
/graycalcs
[
 {Angle Frequency}   
 {GrayAngle GrayFrequency} 
 {0 Width Height matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
 {0 GrayWidth GrayHeight matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
] def
/calcgraysteps {
 forcemaxsteps
 {
maxsteps
 }
 {
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60} 
ifelse
}
ifelse
end
}
{
currentscreen pop exch 
}
ifelse
 
printerRes 300 max exch div exch 
2 copy 
sin mul round dup mul 
3 1 roll 
cos mul round dup mul 
add 1 add 
dup maxsteps gt {pop maxsteps} if 
 }
 ifelse
} bdf
/nextrelease defed { 
 /languagelevel defed not {    
/framebuffer defed { 
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
 }if
}if
fhnumcolors 1 ne {
 /calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
 
 
 currentpagedevice /PreRenderingEnhance known
 {
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps 
{
forcemaxsteps 
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
 } if
} if
/gradfrequency 144 def
printerRes 1000 lt {
 /gradfrequency 72 def
} if
/adjnumsteps {
 
 dup dtransform abs exch abs max  
 
 printerRes div       
 
 gradfrequency mul      
 round        
 5 max       
 min        
}bdf
/goodsep {
 spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def 
/delta -0 def 
/frac -0 def 
/height -0 def 
/left -0 def 
/numsteps1 -0 def 
/radius -0 def 
/right -0 def 
/top -0 def 
/width -0 def 
/xt -0 def 
/yt -0 def 
/df currentflat def 
/tempstr 1 string def 
/clipflatness currentflat def 
/inverted? 
 0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def 
/tc2 [0 0 0 1] def 
/storerect{/top xdf /right xdf /bottom xdf /left xdf 
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
 systemdict /packedarray known 
 {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
 }
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
 }ifelse
}bdf
/i{dup 0 eq
 {pop df dup} 
 {dup} ifelse 
 /clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{ 
 {/filler /eofill load def /clipper /eoclip load def}
 {/filler /fill load def /clipper /clip load def}
 ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
 /NF exch def 
 {    
exch dup 
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
 }forall 
 NF
}bdf
/MN{
 1 index length   
 /Len exch def 
 dup length Len add  
 string dup    
 Len     
 4 -1 roll    
 putinterval   
 dup     
 0      
 4 -1 roll   
 putinterval   
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
 {1 index MN cvn/NewN exch def cvn
 findfont dup maxlength dict CD dup/FontName NewN put dup
 /Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RC}
 ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
 {exch pop findfont 3 -1 roll pop}
 {pop dup findfont dup maxlength dict CD dup dup
 /Encoding exch /Encoding get 256 array copy 7 -1 roll 
 {3 -1 roll dup 4 -2 roll put}forall put definefont}
 ifelse}bdf
/RFJ{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop  
 FontDirectory /Ryumin-Light-83pv-RKSJ-H known 
 {pop pop /Ryumin-Light-83pv-RKSJ-H dup}if  
 }      
 {RC}
 ifelse
}bdf
/FFJ{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
 {exch pop findfont 3 -1 roll pop}
 {pop
dup FontDirectory exch known not 
 {FontDirectory /Ryumin-Light-83pv-RKSJ-H known 
{pop /Ryumin-Light-83pv-RKSJ-H}if 
 }if            
 dup findfont dup maxlength dict CD dup dup
 /Encoding exch /Encoding get 256 array copy 7 -1 roll 
 {3 -1 roll dup 4 -2 roll put}forall put definefont}
 ifelse}bdf
/fps{
 currentflat   
 exch     
 dup 0 le{pop 1}if 
 {
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} 
{exit} 
ifelse
 }loop 
 pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf 
/W{/clipper load 100 clipflatness dup setflat fps}bdf
userdict begin /BDFontDict 29 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
/:M {pop pop} def
/sf {pop} def
/S {pop} def
/@b {pop pop pop pop pop pop pop pop} def
/_bdsave /save load def
/_bdrestore /restore load def
/save { dup /fontsave eq {null} {_bdsave} ifelse } def
/restore { dup null eq { pop } { _bdrestore } ifelse } def
/fontsave null def
end
/MacVec 256 array def 
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash 
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
end %. AltsysDict
AltsysDict begin 
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
 4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
 add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor { 
 max max max  
} ndf
/maxspot {
 pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf 
/currentoverprint false ndf
/cmykbufs2gray{
 0 1 2 index length 1 sub
 { 
4 index 1 index get 0.3 mul 
4 index 2 index get 0.59 mul 
4 index 3 index get 0.11 mul 
4 index 4 index get 
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
 }for
 4 1 roll pop pop pop
}bdf
/colorimage{
 pop pop
 [
5 -1 roll/exec cvx 
6 -1 roll/exec cvx 
7 -1 roll/exec cvx 
8 -1 roll/exec cvx
/cmykbufs2gray cvx
 ]cvx 
 image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le 
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st 
image
 }
 ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
 aload pop 
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub 
1.0 dup im ik add min sub 
1.0 dup iy ik add min sub 
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll 
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll 
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
 }
 ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
 }
 ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf 
/setspotcolor { 
 spots exch get
 dup 4 get (_vc_Registration) eq
 {pop 1 exch sub setseparationgray}
 {0 5 getinterval exch setcustomcolor}
 ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf 
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
/bc4 [0 0 0 0] def 
/_lfp4 {
 /iosv inkoverprint def
 /cosv currentoverprint def
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor      
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 2 lt {pop 1} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 dup 0 eq {pop 0.5 } { div } ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
 iosv setinkoverprint
 cosv setoverprint
}bdf
/bcs [0 0] def 
/_lfs4 {
 /iosv inkoverprint def
 /cosv currentoverprint def
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 2 lt {pop 2} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
 iosv setinkoverprint
 cosv setoverprint
}bdf
/_rfs4 {
 /iosv inkoverprint def
 /cosv currentoverprint def
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 /radius xdf      
 /yt xdf       
 /xt xdf       
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 radius abs adjnumsteps   
 dup 2 lt {pop 2} if    
 1 sub /numsteps1 xdf
 radius numsteps1 div 2 div /halfstep xdf 
 currentflat mark    
 currentflat clipflatness  
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 div /frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat 
{ 
newpath mark xt yt radius 1 frac sub mul halfstep add 0 360
{ arc
radindex numsteps1 ne 
{
xt yt 
radindex 1 add numsteps1 
div 1 exch sub 
radius mul halfstep add
dup xt add yt moveto 
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
 iosv setinkoverprint
 cosv setoverprint
}bdf
/_rfp4 {
 /iosv inkoverprint def
 /cosv currentoverprint def
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 /radius xdf      
 /yt xdf       
 /xt xdf       
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor      
 calcgraysteps mul abs round  
 radius abs adjnumsteps   
 dup 2 lt {pop 1} if    
 1 sub /numsteps1 xdf
 radius numsteps1 dup 0 eq {pop} {div} ifelse 
 2 div /halfstep xdf 
 currentflat mark    
 currentflat clipflatness  
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop 0.5 } { div } ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
newpath mark xt yt radius 1 frac sub mul halfstep add 0 360
{ arc
radindex numsteps1 ne 
{
xt yt 
radindex 1 add 
numsteps1 dup 0 eq {pop} {div} ifelse 
1 exch sub 
radius mul halfstep add
dup xt add yt moveto 
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
 iosv setinkoverprint
 cosv setoverprint
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs4{_rfs4}ndf
/rfp4{_rfp4}ndf
/cvc [0 0 0 1] def 
/vc{
 AltsysDict /cvc 2 index put 
 aload length 4 eq
 {setcmykcolor}
 {setspotcolor}
 ifelse
}bdf 
/origmtx matrix currentmatrix def
/ImMatrix matrix currentmatrix def
0 setseparationgray
/imgr {1692 1584 2287.2756 2425.8898 } def 
/bleed 0 def 
/clpr {1692 1584 2287.2756 2425.8898 } def 
/xs 1 def 
/ys 1 def 
/botx 0 def 
/overlap 0 def 
/wdist 18 def 
0 2 mul fhsetspreadsize 
0 0 ne {/df 0 def /clipflatness 0 def} if 
/maxsteps 256 def 
/forcemaxsteps false def 
-1888 -2019 translate
/currentpacking defed{false setpacking}if 
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1] vc
vms
true eomode
2068.8286 2121.5072 m
2037.1895 2121.5072 L
2046.354 2155.7647 L
2011.0055 2155.7647 L
1985.9124 2065.4296 L
1985.0396 2062.1566 1984.8214 2058.8836 1984.8214 2055.6106 C
1984.8214 2027.2445 2004.8958 2019.6075 2029.5525 2019.6075 C
2036.3167 2019.6075 2043.081 2019.6075 2049.8452 2019.6075 C
2059.2278 2054.956 L
2051.5908 2054.956 2029.1161 2053.4286 2023.8793 2059.32 C
2022.3519 2061.0656 2022.3519 2063.0294 2022.3519 2064.9932 C
2022.3519 2073.2849 2025.6249 2080.9219 2028.4615 2088.5589 C
2060.537 2088.5589 L
2068.8286 2121.5072 L
h
2003.5866 2155.7647 m
1970.4201 2155.7647 L
1960.8193 2126.744 L
1981.7666 2126.744 L
1969.5473 2088.5589 L
1983.9486 2088.5589 L
2003.5866 2155.7647 L
h
1973.0385 2055.1742 m
1966.2743 2055.1742 1959.7283 2054.956 1952.9641 2054.956 C
1946.8545 2054.956 1940.3084 2054.956 1934.417 2056.047 C
1927.871 2057.3562 1923.9434 2064.1204 1923.9434 2070.4482 C
1923.9434 2087.6861 1941.3994 2088.5589 1954.4915 2088.5589 C
1962.3467 2088.5589 L
1972.6021 2121.5072 L
1952.9641 2121.5072 1937.0354 2122.8164 1918.7066 2115.1794 C
1899.9413 2107.3242 1888.3767 2086.8133 1888.3767 2066.957 C
1888.3767 2065.6478 L
1888.1585 2044.7006 1892.9589 2028.9901 1914.5608 2021.3531 C
1919.5794 2019.6075 1927.871 2019.6075 1933.326 2019.6075 C
1943.3633 2019.6075 1953.6187 2019.6075 1963.8741 2019.6075 C
1973.0385 2055.1742 L
f 
n
vmr
end

showpage
